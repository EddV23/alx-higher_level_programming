# Test cases for lazy_matrix_mul function using NumPy.

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

# Test case 1:
# Multiplying two 2x2 matrices with integer elements.
>>> m_a = [
...     [1, 2],
...     [3, 4],
... ]
>>> m_b = [
...     [1, 2],
...     [3, 4],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 7 10]
 [15 22]]


# Test case 2:
# Multiplying a 1x2 matrix with a 2x2 matrix with integer elements.
>>> m_a = [
...     [1, 2],
... ]
>>> m_b = [
...     [3, 4],
...     [5, 6],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[13 16]]


# Test case 3:
# Multiplying two 2x2 matrices with floating-point elements.
>>> m_a = [
...     [1.5, 2.5],
...     [3.5, 4.5],
... ]
>>> m_b = [
...     [2, 1],
...     [1, 2],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 5.5  6.5]
 [11.5 12.5]]


# Test case 4:
# Multiplying a 3x3 matrix with a 3x1 matrix.
>>> m_a = [
...     [1, 2, 3],
...     [4, 5, 6],
...     [7, 8, 9],
... ]
>>> m_b = [
...     [1],
...     [2],
...     [3],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[14]
 [32]
 [50]]


# Test case 5:
# Multiplying two 2x2 matrices with negative integer elements.
>>> m_a = [
...     [-1, -2],
...     [-3, -4],
... ]
>>> m_b = [
...     [-1, -2],
...     [-3, -4],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 7 10]
 [15 22]]


# Test case 6:
# Multiplying a 2x3 matrix with a 3x2 matrix.
>>> m_a = [
...     [1, 2, 3],
...     [4, 5, 6],
... ]
>>> m_b = [
...     [1, 2],
...     [3, 4],
...     [5, 6],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[22 28]
 [49 64]]


# Error Test case 7:
# Multiplying matrices with incompatible sizes.
>>> m_a = [
...     [1, 2, 3],
...     [4, 5, 6],
... ]
>>> m_b = [
...     [1, 2],
...     [3, 4],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
    ...
ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

# Error Test case 8:
# Multiplying matrices with an empty matrix.
>>> m_a = []
>>> m_b = [
...     [1, 2],
...     [3, 4],
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
    ...
ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

# Error Test case 9:
# Multiplying non-rectangular matrices
>>> m_a = [
... [3, 5],
... [4, 7, 9]
... ]
>>> m_b = m_a
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence.

# Error Test case 10:
# Missing one argument
>>> lazy_matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

# Error Test case 11:
# Missing one argument
>>> lazy_matrix_mul()
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
