# Test cases for 7-base_geometry.py

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Valid cases
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 10)
>>> bg.integer_validator("height", 20)
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("", 12)
>>> bg.integer_validator(123, 456)
>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented


# Error cases
>>> bg.integer_validator()
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("temperature", True)
Traceback (most recent call last):
  ...
TypeError: temperature must be an integer

>>> bg.integer_validator("name")
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("name", "Caesar")
Traceback (most recent call last):
  ...
TypeError: name must be an integer


>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  ...
ValueError: age must be greater than 0


>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  ...
ValueError: distance must be greater than 0


>>> bg.integer_validator("number", "123")
Traceback (most recent call last):
  ...
TypeError: number must be an integer

>>> bg.integer_validator("value", None)
Traceback (most recent call last):
  ...
TypeError: value must be an integer

>>> bg.integer_validator("infin", float('inf'))
Traceback (most recent call last):
  ...
TypeError: infin must be an integer

>>> bg.integer_validator("nan", float('nan'))
Traceback (most recent call last):
  ...
TypeError: nan must be an integer

>>> bg.integer_validator("counter", 3.14)
Traceback (most recent call last):
  ...
TypeError: counter must be an integer

>>> bg.integer_validator("quantity", [1, 2, 3])
Traceback (most recent call last):
  ...
TypeError: quantity must be an integer

>>> bg.integer_validator("flag", {"key": "value"})
Traceback (most recent call last):
  ...
TypeError: flag must be an integer

>>> bg.integer_validator("amount", 0)
Traceback (most recent call last):
  ...
ValueError: amount must be greater than 0

>>> bg.integer_validator("size", -7)
Traceback (most recent call last):
  ...
ValueError: size must be greater than 0
